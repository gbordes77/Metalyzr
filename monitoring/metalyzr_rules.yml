groups:
  - name: metalyzr_alerts
    rules:
      # API Health
      - alert: MetalyzrAPIDown
        expr: up{job="metalyzr-api"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Metalyzr API is down"
          description: "L'API Metalyzr n'est pas accessible depuis {{ $labels.instance }}"

      # High Error Rate
      - alert: MetalyzrHighErrorRate
        expr: rate(metalyzr_api_errors_total[5m]) > 0.1
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Taux d'erreur élevé sur l'API Metalyzr"
          description: "Le taux d'erreur est de {{ $value }} erreurs/sec sur {{ $labels.instance }}"

      # Cache Issues
      - alert: MetalyzrCacheDown
        expr: metalyzr_cache_hits_total{type="status"} == 0
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Cache Metalyzr indisponible"
          description: "Aucune réponse du cache sur {{ $labels.instance }}"

      # High Latency
      - alert: MetalyzrHighLatency
        expr: histogram_quantile(0.95, rate(metalyzr_request_duration_seconds_bucket[5m])) > 0.5
        for: 3m
        labels:
          severity: warning
        annotations:
          summary: "Latence élevée API Metalyzr"
          description: "P95 latence: {{ $value }}s sur {{ $labels.instance }}"

      # High Request Rate
      - alert: MetalyzrHighRequestRate
        expr: rate(metalyzr_requests_total[1m]) > 100
        for: 2m
        labels:
          severity: info
        annotations:
          summary: "Trafic élevé sur l'API Metalyzr"
          description: "{{ $value }} req/sec sur {{ $labels.instance }}"

  - name: system_alerts
    rules:
      # High CPU
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "CPU usage élevé"
          description: "CPU usage est à {{ $value }}% sur {{ $labels.instance }}"

      # High Memory
      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Mémoire usage élevé"
          description: "Mémoire usage est à {{ $value }}% sur {{ $labels.instance }}" 