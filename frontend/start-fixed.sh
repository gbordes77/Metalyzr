#!/bin/bash

echo "üîß METALYZR FRONTEND - D√©marrage avec corrections"
echo "================================================="

# Variables d'environnement
export REACT_APP_API_URL=http://localhost:8000
export REACT_APP_USE_MOCKS=true
export HOST=localhost
export PORT=3000
export BROWSER=none

# V√©rifier si on est dans le bon r√©pertoire
if [ ! -f "package.json" ]; then
    echo "‚ùå Erreur: package.json non trouv√©"
    echo "   Veuillez ex√©cuter ce script depuis le dossier frontend/"
    exit 1
fi

echo "üßπ Nettoyage de l'environnement..."
rm -rf node_modules/.cache

echo "üì¶ V√©rification des d√©pendances..."
if [ ! -d "node_modules" ] || [ ! -f "node_modules/zustand/package.json" ]; then
    echo "   Installation des d√©pendances manquantes..."
    npm install zustand
fi

echo "üî® Construction de l'application..."
npm run build

if [ $? -ne 0 ]; then
    echo "‚ùå Erreur lors de la construction"
    echo "   Tentative de nettoyage complet..."
    rm -rf node_modules package-lock.json
    npm install
    npm run build
    
    if [ $? -ne 0 ]; then
        echo "‚ùå Impossible de construire l'application"
        echo "   Utilisation du serveur Python de fallback..."
        cd build 2>/dev/null || {
            echo "‚ùå Aucun build disponible"
            exit 1
        }
        python3 simple-server.py
        exit 0
    fi
fi

echo "üöÄ D√©marrage du serveur..."

# M√©thode 1: Serveur Python optimis√© (recommand√©)
if [ -f "build/simple-server.py" ]; then
    echo "   Utilisation du serveur Python avec proxy API"
    cd build
    python3 simple-server.py
else
    # M√©thode 2: Serveur de d√©veloppement React
    echo "   Utilisation du serveur de d√©veloppement React"
    npm start
fi 